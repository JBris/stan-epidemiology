---
title: "phytools"
format: html
editor: visual
---

## anc.Bayes

```{r}
library(phytools)

set.seed(77)
## load data from Garland et al. (1992)
data(mammal.tree)
data(mammal.data)
## extract character of interest
ln.bodyMass<-log(setNames(mammal.data$bodyMass,
rownames(mammal.data)))
## run MCMC (should be run at least 1e6 generations)
mcmc<-anc.Bayes(mammal.tree,ln.bodyMass,
ngen=50000)
## print object to review estimates
print(mcmc,printlen=20)
## plot likelihood trace and root density
par(mfrow=c(2,1))
plot(mcmc,bty="l",main="Likelihood-profile from MCMC",
font.main=3) ## likelihood-profile
plot(density(mcmc,what=Ntip(mammal.tree)+1,
burnin=20000),bty="l",
main="Posterior density for root state of log(body mass)",
font.main=3)
## reset par to default
par(mfrow=c(1,1))
```

## anc.ML

```{r}
## load data from Garland et al. (1992)
data(mammal.tree)
data(mammal.data)
## extract character of interest
anc.trend 
ln.bodyMass<-log(setNames(mammal.data$bodyMass,
rownames(mammal.data)))
## estimate ancestral state under BM model
fit.BM<-anc.ML(mammal.tree,ln.bodyMass)
## print results
print(fit.BM)
```

## anc.trend

```{r}
## simulate tree & data using fastBM with a trend (m!=0)
tree<-rtree(n=26,tip.label=LETTERS)
x<-fastBM(tree,mu=4,internal=TRUE)
a<-x[as.character(1:tree$Nnode+Ntip(tree))]
x<-x[tree$tip.label]
## fit no trend model
fit.bm<-anc.ML(tree,x,model="BM")
print(fit.bm)
## fit trend model
fit.trend<-anc.trend(tree,x)
print(fit.trend)
## compare trend vs. no-trend models & estimates
AIC(fit.bm,fit.trend)
layout(matrix(c(3,4,1,2,5,6),3,2,byrow=TRUE),
heights=c(1.5,3,1.5),widths=c(3,3))
xlim<-ylim<-range(c(a,fit.bm$ace,
fit.trend$ace))
plot(a,fit.bm$ace,pch=19,
col=make.transparent("blue",0.5),
xlab="true ancestral states",
ylab="ML estimates",
main=paste("Comparison of true and estimated",
"\nstates under a no-trend model"),font.main=3,
cex.main=1.2,bty="l",cex=1.5,
xlim=xlim,ylim=ylim)
lines(xlim,ylim,lty="dotted")
plot(a,fit.trend$ace,pch=19,
col=make.transparent("blue",0.5),
xlab="true ancestral states",
ylab="ML estimates",
main=paste("Comparison of true and estimated",
"\nstates under a trend model"),font.main=3,
cex.main=1.2,bty="l",cex=1.5,
xlim=xlim,ylim=ylim)
lines(xlim,ylim,lty="dotted")
```

## ancThresh

```{r}
data(sunfish.tree)
data(sunfish.data)
## extract character of interest
fmode<-setNames(sunfish.data$feeding.mode,
rownames(sunfish.data))
## run MCMC
mcmc<-ancThresh(sunfish.tree,fmode,ngen=100000)
## plot results
plot(mcmc,mar=c(0.1,0.1,4.1,0.1))
title(main="Posterior probabilities for node states",
font.main=3)
## reset par to default
par(mar=c(5.1,4.1,4.1,2.1))
## End(Not run)
```

## bind.tip

```{r}
## set seed
set.seed(123)
## subdivide plotting device
par(mfrow=c(3,1))
## generate tree
tree<-pbtree(b=0.1, n=10)
## plot original tree
plotTree(tree,mar=c(2.1,0.1,2.1,0.1))
axisPhylo()
mtext("a)",adj=0)
## add an extant tip ("t_extant") sister to taxon 't5'
## with divergence time of 4.5 Ma
node<-which(tree$tip.label=="t5")
tree<-bind.tip(tree, tip.label="t_extant",
where=node, position=4.5)
## re-plot to see the result
plotTree(tree,mar=c(2.1,0.1,2.1,0.1))
axisPhylo()
mtext("b)",adj=0)
## add an extinct tip ("t_extinct") sister to 't2' with
## divergence time of 7.8 Ma and duration (edge length) of
## 3.3 Ma
node<-which(tree$tip.label=="t2")
tree<-bind.tip(tree, tip.label="t_extinct", where=node,
position=7.8, edge.length=3.3)
## re-plot to see the result
plotTree(tree,mar=c(2.1,0.1,2.1,0.1))
axisPhylo()
mtext("c)",adj=0)
## reset par to default
par(mar=c(5.1,4.1,4.1,2.1),mfrow=c(1,1))
```

## bmPlot

```{r}
set.seed(999)
## plot BM simulation on 12 taxon tree
tree<-pbtree(n=12)
par(mfrow=c(1,2),mar=c(5.1,4.1,4.1,0.1))
x<-bmPlot(tree,bty="l")

plotTree(tree,direction="upwards",
mar=c(5.1,0.1,4.1,1.1),ftype="off")
## reset par to default values
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1))
## plot simulation of a threshold character
par(mfrow=c(1,2),mar=c(5.1,4.1,4.1,0.1))
tt<-bmPlot(tree,type="threshold",thresholds=c(0,1,2),
bty="l")
plot(tt$tree,direction="upwards",
mar=c(5.1,0.1,4.1,1.1),ftype="off",
colors=setNames(c("black","red","blue"),
letters[1:3]),lwd=3)
## reset par to default values
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1))
```

## brownie.lite

```{r}
## load data from Revell & Collar (2009)
data(sunfish.tree)
data(sunfish.data)
## extract character of interest
buccal.length<-setNames(sunfish.data$buccal.length,
rownames(sunfish.data))
## fit model
multiBM.fit<-brownie.lite(sunfish.tree,
buccal.length)
## print fitted model
print(multiBM.fit)
```

## brownieREML

```{r}
## load data from Revell & Collar (2009)
data(sunfish.tree)
data(sunfish.data)
## extract character of interest
gape.width<-setNames(sunfish.data$gape.width,
rownames(sunfish.data))
## fit model
multiBM.reml<-brownieREML(sunfish.tree,
gape.width)
## print fitted model
print(multiBM.reml)
```

## collapseTree

```{r}
# Not run:
## load phylogeny
data(liolaemid.tree)
## run collapseTree
pruned<-collapseTree(sunfish.tree,fsize=0.5)
## reset par to default
par(mar=c(5.1,4.1,4.1,2.1))
## End(Not run)
```

## contMap

```{r}
## load data from Garland et al. (1992)
data(mammal.tree)
data(mammal.data)
## extract character of interest
ln.bodyMass<-log(setNames(mammal.data$bodyMass,
rownames(mammal.data)))
## create "contMap" object
mammal.contMap<-contMap(mammal.tree,
ln.bodyMass,plot=FALSE,res=200)
## change color scheme
mammal.contMap<-setMap(mammal.contMap,
c("white","#FFFFB2","#FECC5C","#FD8D3C",
"#E31A1C"))
## plot object
plot(mammal.contMap,fsize=c(0.7,0.8),
leg.txt="log(body mass)")
## reset margins to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## cophylo

```{r}
## load data from Lopez-Vaamonde et al. (2001)
data(wasp.trees)
data(wasp.data)
## create co-phylogenetic object
wasp.cophylo<-cophylo(wasp.trees[[1]],wasp.trees[[2]],
assoc=wasp.data)
## plot co-phylogenies
plot(wasp.cophylo,link.type="curved",link.lwd=4,
link.lty="solid",link.col=make.transparent("red",
0.25))
## reset par to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## cospeciation

```{r}
## load data from Lopez-Vaamonde et al. (2001)
data(wasp.trees)
data(wasp.data)
## test for cospeciation
wasp.cosp<-cospeciation(wasp.trees[[1]],wasp.trees[[2]],
assoc=wasp.data)
## print results
print(wasp.cosp)
## plot null distribution & test statistic

plot(wasp.cosp)
title(main=paste("Simulated distribution of RF distances\n",
"between unassociated trees"),font.main=3)
```

## dotTree

```{r}
## load data from Garland et al. (1992)
data(mammal.tree)
data(mammal.data)
## log-transform trait data
log.mammal<-log(mammal.data)
## plot dotTree
dotTree(mammal.tree,log.mammal,fsize=0.7,
standardize=TRUE,length=10)
## reset margins to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## edge.widthMap

```{r}
## load data from Garland et al. (1992)
data(mammal.tree)
data(mammal.data)
## extract character of interest
ln.bodyMass<-log(setNames(mammal.data$bodyMass,
rownames(mammal.data)))
## create "edge.widthMap" object
mammal.ewMap<-edge.widthMap(mammal.tree,ln.bodyMass,
min.width=0.05)
## plot it
plot(mammal.ewMap,legend="log(body mass)",
color=palette()[4])
## reset margins to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## evol.vcv

```{r}
## load data from Revell & Collar (2009)
data(sunfish.tree)
data(sunfish.data)
## fit multi-correlation model
sunfish.fit<-evol.vcv(sunfish.tree,sunfish.data[,2:3])
print(sunfish.fit)
```

## fancyTree

```{r}
## plot tree with extinction
set.seed(10)
tree<-pbtree(b=1,d=0.4,t=4)
fancyTree(tree,type="extinction")
## Not run:
## plot 3D traitgram
## load data from Revell & Collar (2009)
data(sunfish.tree)
data(sunfish.data)
fancyTree(sunfish.tree,type="traitgram3d",
X=sunfish.data[,2:3],
control=list(spin=FALSE))
## End(Not run)
## plot with dropped tips
tree<-pbtree(n=30)
tips<-sample(tree$tip.label)[1:10]
pruned<-fancyTree(tree,type="droptip",tip=tips)
## reset par to default
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1))
## Not run:
## plot 95-percent CI phenogram
data(mammal.tree)
data(mammal.data)
bodyMass<-setNames(mammal.data$bodyMass,
rownames(mammal.data))
fancyTree(mammal.tree,type="phenogram95",x=bodyMass,
fsize=0.7,ftype="i")
## End(Not run)
## reset mar to defaults
par(mar=c(5.1,4.1,4.1,2.1))
```

## fastBM

```{r}
## load example tree
data(anoletree)
## simulate 10 characters on the Anolis tree
## under Brownian motion
X<-fastBM(anoletree,nsim=10)
head(X)
## create a plot
phylo.heatmap(anoletree,X,fsize=c(0.4,0.8,0.8),
standardize=TRUE,colors=terrain.colors(n=20))
```

## fastMRCA

```{r}
## simulate 2000-tip tree
tree<-pbtree(n=2000)
## find the MRCA of two randomly chosen tips
tips<-sample(tree$tip.label,2)
anc<-fastMRCA(tree,tips[1],tips[2])
```

## findMRCA

```{r}
## load tree
data(anoletree)
## find the common ancestor of three taxa
anc<-findMRCA(anoletree,c("cristatellus","cooki",
"gundlachi"))
## graph the tree
plotTree(anoletree,type="fan",fsize=0.7,lwd=1)
## label the identified ancestor
nodelabels(node=anc,frame="circle",pch=21,cex=1.5,
bg="blue")

legend("topleft",
"most recent common ancestor\nof Puerto Rican TG anoles",
pch=21,pt.cex=1.5,pt.bg="blue",cex=0.7,bty="n")
## reset margin to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## fit.bd

```{r}
## load tree
data(salamanders)
## compute sampling fraction based on 55 species of Plethodon
sampling.f<-Ntip(salamanders)/55
## fit birth-death model
bd.fit<-fit.bd(salamanders,rho=sampling.f)
print(bd.fit)
## fit Yule model
yule.fit<-fit.yule(salamanders,rho=sampling.f)
print(yule.fit)
## compare b-d and yule models
anova(yule.fit,bd.fit)
## create a likelihood surface for b-d model
ngrid<-100
b<-seq(0.01,0.06,length.out=ngrid)
d<-seq(0.005,0.03,length.out=ngrid)
logL<-sapply(d,function(d,b) sapply(b,function(b,d)
bd.fit$lik(c(b,d)),d=d),b=b)
```

## fitMk

```{r}
## load tree and data from Revell & Collar (2009)
data(sunfish.tree)
data(sunfish.data)
## extract discrete character (feeding mode)
fmode<-setNames(sunfish.data$feeding.mode,
rownames(sunfish.data))
## fit "ER" model
fit.ER<-fitMk(sunfish.tree,fmode,model="ER")
print(fit.ER)
## fit "ARD" model
fit.ARD<-fitMk(sunfish.tree,fmode,model="ARD")
print(fit.ARD)
## compare the models
AIC(fit.ER,fit.ARD)
## load tree and data from Benitez-Alvarez et al. (2000)
data(flatworm.data)
data(flatworm.tree)
## extract discrete character (habitat)
habitat<-setNames(flatworm.data$Habitat,
rownames(flatworm.data))
## fit polymorphic models "ER" and "transient"
fitpoly.ER<-fitpolyMk(flatworm.tree,habitat,
model="ER")
fitpoly.transient<-fitpolyMk(flatworm.tree,habitat,
model="transient")
## print fitted models
print(fitpoly.ER)
print(fitpoly.transient)
## compare model
AIC(fitpoly.ER,fitpoly.transient)
## plot models
par(mfrow=c(2,1))
plot(fitpoly.ER)
mtext("a) ER polymorphic model",adj=0,line=1)

plot(fitpoly.transient)
mtext("b) Transient polymorphic model",adj=0,
line=1)
## reset par to default
par(mfrow=c(1,1))
```

## fitPagel

```{r}
## Not run:
## load data
data(bonyfish.tree)
data(bonyfish.data)
## extract discrete characters
spawning_mode<-setNames(bonyfish.data$spawning_mode,
rownames(bonyfish.data))
paternal_care<-setNames(bonyfish.data$paternal_care,
rownames(bonyfish.data))
## fit correlational model
bonyfish.pagel<-fitPagel(bonyfish.tree,paternal_care,
spawning_mode)
## test for a difference between models
anova(bonyfish.pagel)
## plot fitted models
plot(bonyfish.pagel,lwd.by.rate=TRUE)
## reset par
par(mar=c(5.1,4.1,4.1,2.1),mfrow=c(1,1))
## End(Not run)
```

## genSeq

```{r}
 ## load tree
data(mammal.tree)
## rescale edge lengths
mammal.tree$edge.length<-mammal.tree$edge.length/
max(nodeHeights(mammal.tree))*0.2
## simulate gamma rate heterogeneity
gg<-rgamma(n=100,shape=0.25,rate=0.25)
## simulate DNA sequences with rate heterogeneity
dna<-genSeq(mammal.tree,l=100,rate=gg)
dna
```

## ltt

```{r}
## set seed
set.seed(99)
## simulate set of random trees
trees<-pbtree(n=100,scale=100,nsim=10)
## create "multiLTT" object
obj<-ltt(trees,plot=FALSE)
## plot "multiLTT" object
plot(obj,log="y",log.lineages=FALSE,
bty="l")
title(main="LTT plots for 10 pure-birth trees",
font.main=3)
## simulate single tree
tree<-pbtree(b=1,d=0.25,t=4)

## graph LTT with superimposed tree
obj<-ltt(tree,gamma=FALSE,show.tree=TRUE,
bty="l",lwd=2)
title(main="LTT plot with superimposed tree",
font.main=3)
obj
## load dataset
data(anoletree)
## create gamma-through-time plot
anole.gtt<-gtt(anoletree,n=40)
plot(anole.gtt)
```

## make.era.map

```{r}
## simulate tree with total depth of 100
tree<-pbtree(n=1000,scale=100)
## subdivide into mapped eras
tree<-make.era.map(tree,c(0,25,50,75))
## create graph of mapped tree
plot(tree,ftype="off",lwd=1)
## reset margins to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## multirateBM

```{r}
## Not run:
## load data
data(sunfish.tree)
data(sunfish.data)
## convert from "simmap" to "phylo"
sunfish.tree<-as.phylo(sunfish.tree)
## extract character of interest

gw<-setNames(sunfish.data$gape.width,
rownames(sunfish.data))
## run penalized-likelihood optimization
## lambda=0.1 is arbitrary
fitBM<-multirateBM(sunfish.tree,gw,
lambda=0.01)
## print and plot the results
print(fitBM)
plot(fitBM,ftype="i",fsize=0.8,lwd=6,
outline=TRUE)
## reset par
par(mar=c(5.1,4.1,4.1,2.1))
## End(Not run)
```

## nodeHeights

```{r}
## load tree
data(vertebrate.tree)
## compute height of all nodes
H<-nodeHeights(vertebrate.tree)
print(H)
## compute total tree depth
max(H)
```

## paste.tree

```{r}
## create two random trees
tr1<-rtree(10)
tr2<-rtree(10)
## make one tip "sticky" by renaming it "NA"
tr1$tip.label[sample(1:10,1)]<-"NA"
tr2$root.edge<-0
## paste the two trees together
tr3<-paste.tree(tr1,tr2)
## plot the results
layout(matrix(c(1,1,2,2,4,3,3,4),2,4,byrow=TRUE))
plotTree(tr1,direction="upwards",
mar=c(1.1,1.1,3.1,1.1))
add.arrow(tree=tr1,tip=which(tr1$tip.label=="NA"),
hedl=0.2,arrl=0.2,offset=1)
mtext("a) recipient tree",adj=0)
plotTree(tr2,direction="upwards",plot=FALSE)
pp<-get("last_plot.phylo",envir=.PlotPhyloEnv)
plotTree(tr2,direction="upwards",
mar=c(1.1,1.1,3.1,1.1),
ylim=c(-0.2,pp$y.lim[2]),add=TRUE)
arrows(pp$xx[11],pp$yy[11],pp$xx[11],-0.2,
length=0.1,lwd=2)
mtext("b) donor tree",adj=0)
plotTree(tr3,direction="upwards",
mar=c(1.1,1.1,3.1,1.1))
mtext("c) grafted tree",adj=0)
## reset par to default
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1))
```

## phenogram

```{r}
data(mammal.tree)
data(mammal.data)
## extract character of interest
ln.bodyMass<-log(setNames(mammal.data$bodyMass,
rownames(mammal.data)))
## plot traitgram
phenogram(mammal.tree,ln.bodyMass,ftype="i",
spread.cost=c(1,0),fsize=0.7,color=palette()[4],
xlab="time (ma)",ylab="log(body mass)",las=1)
```

## phyl.pca

```{r}
## load data from Mahler et al. (2010)
data(anoletree)
data(anole.data)
## run phylogenetic PCA
anole.pca<-phyl.pca(anoletree,anole.data)
print(anole.pca)
## plot results
plot(anole.pca)
biplot(anole.pca)
```

## phyl.RMA

```{r}
data(mammal.data)
data(mammal.tree)
## pull out & log transform variables
lnBodyMass<-setNames(log(mammal.data$bodyMass),
rownames(mammal.data))
lnHomeRange<-setNames(log(mammal.data$homeRange),
rownames(mammal.data))
## fit RMA regression & print results
fitted.rma<-phyl.RMA(lnBodyMass,lnHomeRange,
mammal.tree)
print(fitted.rma)
## plot fitted RMA
par(las=1,bty="n")
plot(fitted.rma,las=1,bty="n")
```

## phylo.heatmap

```{r}
## load data
data(anoletree)
data(anole.data)
## compute phylogenetic residuals
anole.data<-as.matrix(anole.data)
anole.resids<-cbind(anole.data[,1],
phyl.resid(anoletree,anole.data[,1,drop=FALSE],
anole.data[,2:ncol(anole.data)])$resid)
colnames(anole.resids)[1]<-"SVL"
## plot phylogenetic heatmap
phylo.heatmap(anoletree,anole.resids,
split=c(0.7,0.3),fsize=c(0.4,0.8,0.8),
standardize=TRUE,pts=FALSE)
## reset par to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## phylomorphospace

```{r}
## load tree & data from Revell & Collar (2009)
data(sunfish.tree)
data(sunfish.data)
## set colors for mapped discrete character
cols<-setNames(c("blue","red"),
levels(sunfish.data$feeding.mode))

## graph phylomorphospace
phylomorphospace(sunfish.tree,sunfish.data[,3:2],
colors=cols,bty="l",ftype="off",node.by.map=TRUE,
node.size=c(0,1.2),xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=3)
```

## phylomorphospace3d

```{r}
## load data
data(anoletree)
data(anole.data)
## run phylogenetic PCA
anole.pca<-phyl.pca(anoletree,anole.data)
## Not run:
## create dynamic plot using rgl
phylomorphospace3d(anoletree,scores(anole.pca)[,1:3],
control=list(spin=FALSE))
## End(Not run)
## create static plot
par(cex=0.5) ## adjust font size
phylomorphospace3d(anoletree,scores(anole.pca)[,1:3],
method="static",angle=-30)
par(cex=1) ## reset to default
```

## phylosig

```{r}
## load data from Garland et al. (1992)
data(mammal.tree)
data(mammal.data)
## extract characters of interest
ln.bodyMass<-log(setNames(mammal.data$bodyMass,
rownames(mammal.data)))
ln.homeRange<-log(setNames(mammal.data$homeRange,
rownames(mammal.data)))
## compute phylogenetic signal K

K.bodyMass<-phylosig(mammal.tree,ln.bodyMass,
test=TRUE)
print(K.bodyMass)
plot(K.bodyMass)
K.homeRange<-phylosig(mammal.tree,ln.homeRange,
test=TRUE)
print(K.homeRange)
plot(K.homeRange)
## compute phylogenetic signal lambda
lambda.bodyMass<-phylosig(mammal.tree,ln.bodyMass,
method="lambda",test=TRUE)
print(lambda.bodyMass)
plot(lambda.bodyMass)
lambda.homeRange<-phylosig(mammal.tree,ln.homeRange,
method="lambda",test=TRUE)
print(lambda.homeRange)
plot(lambda.homeRange)
``` 

## plot.backbonePhylo 

```{r}
## first create our backbone tree with
## random subtree diversities
tree<-phytools:::lambdaTree(pbtree(n=10),lambda=0.5)
## create a translation table
## leaving a couple of single-taxon clades for fun
tip.label<-sample(tree$tip.label,8)
clade.label<-LETTERS[1:8]
N<-ceiling(runif(n=8,min=1,max=20))
## set crown node depth to 1/2 the maximum depth
depth<-sapply(tip.label,function(x,y)
0.5*y$edge.length[which(tree$edge[,2]==
which(y$tip.label==x))],y=tree)
trans<-data.frame(tip.label,clade.label,N,depth)
rownames(trans)<-NULL
## here's what trans looks like
print(trans)
## convert
obj<-phylo.toBackbone(tree,trans)
## plot
plot(obj)
## reset par to default
par(mar=c(5.1,4.1,4.1,2.1))
``` 

## plotSimmap

```{r}
## load tree with mapped character
data(anoletree)
## set colors for regims
cols<-setNames(c("green","#E4D96F","darkgreen",
"brown","black","darkgrey"),
c("CG","GB","TC","TG","Tr","Tw"))
## create plot
plot(anoletree,cols,fsize=0.5,ftype="i",outline=TRUE,
lwd=3,ylim=c(0,Ntip(anoletree)),
mar=c(0.1,0.1,1.1,0.1))
add.simmap.legend(colors=cols,prompt=FALSE,x=0,y=-0.5,
vertical=FALSE)
title(main="Caribbean ecomorphs of anoles",font.main=3,
line=0)
## reset margins to default
par(mar=c(5.1,4.1,4.1,2.1))
``` 

## plotTree

```{r}
## load tree
data(vertebrate.tree)
## create plot
plotTree(vertebrate.tree,fsize=1.2,ftype="i")
## reset margins to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## plotTree.wBars

```{r}
## load data from Mahler et al. (2010)
data(anoletree)
data(anole.data)
## extract overall body size (SVL)
svl<-setNames(anole.data$SVL,rownames(anole.data))
## plotTree.wBars
plotTree.wBars(anoletree,svl,type="fan",scal=0.5)
par(mar=c(5.1,4.1,4.1,2.1))
## plotTree.barplot
plotTree.barplot(anoletree,exp(svl),
args.plotTree=list(fsize=0.5),
args.barplot=list(xlab="SVL (mm)"))
## load vertebrate tree and data
data(vertebrate.tree)
data(vertebrate.data)
## plotTree.barplot
options(scipen=4) ## change sci-notation
par(cex.axis=0.8)
plotTree.barplot(vertebrate.tree,
setNames(vertebrate.data$Mass,
rownames(vertebrate.data)),
args.barplot=list(
log="x",
xlab="mass (kg)",
xlim=c(0.01,500000),
col=palette()[4]))
options(scipen=0)
## reset par to defaults
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1),cex.axis=1)
```

## read.newick

```{r}
## create text Newick string
tree<-"(((Human:7,Chimp:7):3,Gorilla:10):15,Monkey:25);"
## parse string
phy<-read.newick(text=tree)
## create plot
plotTree(phy,fsize=1.2,lwd=5,direction="downwards",
mar=c(2.1,5.1,2.1,1.1),ylim=c(25,-3.8))
axis(2)
title(ylab="time before present (ma)")
```

## roundPhylogram

```{r}
## load mammal.tree
data(mammal.tree)
## plot using roundPhylogram
roundPhylogram(compute.brlen(mammal.tree),
fsize=0.8,ftype="i")
## load anoletree
data(anoletree)
## plot using sigmoidPhylogram
sigmoidPhylogram(anoletree,fsize=0.6,
ftype="i",direction="upwards")
## reset margin to default
par(mar=c(5.1,4.1,4.1,2.1))
```

## simBMphylo

```{r}
## set seed
set.seed(777)
## create plot
simBMphylo(n=6,t=100,sig2=0.01)
## reset par to defaults
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1))
```

## threshBayes

```{r}
## Not run:
## load data
data(bonyfish.tree)
data(bonyfish.data)
## run MCMC
mcmc<-threshBayes(bonyfish.tree,bonyfish.data,
ngen=10000,plot=FALSE)
## visualize summary of MCMC
plot(mcmc)
## reset par
par(mfrow=c(1,1),mar=c(5.1,4.1,4.1,2.1))
## graph posterior density of correlation
plot(density(mcmc,bw=0.1))
## End(Not run)
```